@model IEnumerable<MaisSaude.Models.Titular>

@{
    ViewData["Title"] = "Index";
}

<h1>Lista de Títulares</h1>

<table id="myTable" class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CPFTitular)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataNascimento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Celular)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CPFTitular)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataNascimento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Celular)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>


                    <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                        <button type="button" class="btn btn-warning">
                            @Html.ActionLink("Editar", "Edit", new { CPF=item.CPFTitular  },new {@class="text-white text-decoration-none fw-bold"})  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                            </svg>
                        </button>
                        <button type="button" class="btn btn-primary">
                            @Html.ActionLink("Details", "Details", new {  CPF=item.CPFTitular  },new {@class="text-white text-decoration-none fw-bold"})   <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                                <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                            </svg>
                        </button>
                        @*                      <button type="button" class="btn btn-danger">   @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ },new {@class="text-white text-decoration-none fw-bold"})  </button>*@
                    </div>


                </td>
            </tr>
        }
    </tbody>
</table>
<p>
    <a asp-action="Create" class="btn btn-primary">
        Cadastrar Títular
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-plus-fill" viewBox="0 0 16 16">
            <path d="M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
            <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z" />
        </svg>
    </a>
</p>

<div id="myGrid" class="ag-theme-alpine" style="height: 500px"></div>


@section scripts{
    <script type="text/javascript">

        class CountryCellRenderer {
            init(params) {
                const flag = `<div>teste</div>`;

                const eTemp = document.createElement('div');
                eTemp.innerHTML = `<span style="cursor: default;"></span>`;
                this.eGui = eTemp.firstElementChild;
            }

            getGui() {
                return this.eGui;
            }

            refresh(params) {
                return false;
            }
        }

        const gridOptions = {
            columnDefs: [
                { field: "nome" },
                { field: "cpfTitular" },
                { field: "dataNascimento" },
                { field: "celular", headerName: 'Celular', sortable: true },
                { field: "email", headerName: 'E-mail', sortable: true },
                {
                    field: "cpfTitular",
                    headerName: '',
                    filter: false,
                    sortable: true,
                    onCellClicked: params => { window.location.href = "https://localhost:7247/Titular/Edit?CPF=" + params.data.cpfTitular },
                    cellRenderer: params => {
                        return '<button class="btn btn-warning text-white"> <i class="bi bi-pencil-fill"></i> </button>'
                    }
                },
            ],
            defaultColDef: { sortable: true, filter: true },
            rowSelection: 'multiple',
            animateRows: true,
            pagination: true
        };

        const eGridDiv = document.getElementById("myGrid");
        new agGrid.Grid(eGridDiv, gridOptions);

        fetch("https://localhost:7291/api/Cliente/ListaTitulares").then(response => response.json())
            .then(data => {
                // load fetched data into grid
                gridOptions.api.setRowData(data);

            });


    </script>
}
